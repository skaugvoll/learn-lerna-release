name: Create Prod Request
on:
  release:
    types:
      - prereleased

env:
  src_branch: main
  dest_branch: production

jobs:
  pre:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set Git config
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"
      - name: "set up node"
        uses: actions/setup-node@v2
        with:
          node-version: "17"
      # - name: Expose matrix of changed packages
      #   id: find_changed_packages
      #   shell: bash
      #   run: |
      #     matrix=$((npx lerna changed --all --json) | jq -c '[.[] | .location | split("/")  | .[-1]]') # outputs ["package-a", "package-b"]
      #     echo $matrix
      #     echo "::set-output name=matrix::$matrix"
      - name: Trigger that was used
        env:
          TRIGGER_EVENT: ${{ toJSON(github.event) }}
          TRIGGER_EVENT_NAME: ${{github.event_name}}
        run: |
          echo $TRIGGER_EVENT
          echo $TRIGGER_EVENT_NAME
          echo ${{github.event.release.tag_name}}
      - name: get-package-tag
        if: inputs.version == ''
        id: get-version-number
        shell: bash
        run: |
          string=${{github.event.release.tag_name}}
          delimiter="@"
          version=${string#*$delimiter} # remover everything up to (including), delimiter
          pkg=${string%$delimiter*} # remover everything after (including), delimiter
          echo "Version: $version \n Pkg: $pkg"
          echo "::set-output name=version::$version"
          echo "::set-output name=pkg::$pkg"
    outputs:
      # matrix: ${{ steps.find_changed_packages.outputs.matrix }}
      version: ${{ steps.get-version-number.outputs.version  }}
      pkg: ${{ steps.get-version-number.outputs.pkg  }}
  build:
    needs: pre
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     package: ${{ fromJSON(needs.pre.outputs.matrix) }}
    steps:
      - run: |
          echo "How many times is this job triggered, when 2 packages changes, is it 1 workflow (packages) = 1*2 = 2"
          echo "or is it 2 workflows (one for each package) * 2 packages changes = 2 * 2 = 4"
  create-pr:
    runs-on: ubuntu-latest
    needs:
      - pre
    steps:
      - uses: actions/checkout@v2
      - name: pull-request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: main # If blank, default: triggered branch
          destination_branch: production # If blank, default: master
          pr_title: "Create Deploy Job for ${{ github.event.release.tag_name }}" # Title of pull request
          pr_body: ":rocket: " # Full markdown support, requires pr_title to be set
          # pr_template: ".github/PULL_REQUEST_TEMPLATE.md" # Path to pull request template, requires pr_title to be set, excludes pr_body
          # pr_reviewer: "wei,worker" # Comma-separated list (no spaces)
          # pr_assignee: "wei,worker" # Comma-separated list (no spaces)
          pr_label: "deployment" # Comma-separated list (no spaces)
          pr_draft: false # Creates pull request as draft
          pr_allow_empty: true # Creates pull request even if there are no changes
          github_token: ${{ secrets.LERNA_RELEASE_TOKEN }}
